version: '3'

services:
  app:
    build:
      context: backend/.
      dockerfile: Dockerfile
      args:
        - Test:true
    environment:
      PYTHONPATH: '.'
    entrypoint: [ 'python', 'server.py' ]
    ports:
      - '80:8080'
    depends_on:
      - postgres

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - pg-data:/var/lib/postgresql/data

  minio:
    image: minio/minio:RELEASE.2022-11-11T03-44-20Z.fips
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - '9000:9000'
      - '9001:9001'
    command: server --console-address ":9001" /data
    volumes:
      - minio-data:/data

  minio-create-buckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      echo ${MINIO_ACCESS_KEY};
      echo ${MINIO_SECRET_KEY};
      /usr/bin/mc alias set myminio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb myminio/${MINIO_DEFAULT_BUCKET};
      /usr/bin/mc policy set public myminio/${MINIO_DEFAULT_BUCKET};
      exit 0;
      "
#    entrypoint: >
#          /bin/sh -c "
#          until (/usr/bin/mc config host add myminio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}) do echo '...waiting...' && sleep 1; done;
#          /usr/bin/mc mb myminio/test;
#          /usr/bin/mc policy set download myminio/test;
#          exit 0;
#          "

volumes:
  pg-data:
  minio-data:
